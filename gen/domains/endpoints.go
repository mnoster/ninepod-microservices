// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// domains endpoints
//
// Command:
// $ goa gen ninepod/design

package domains

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "domains" service endpoints.
type Endpoints struct {
	Domains goa.Endpoint
}

// NewEndpoints wraps the methods of the "domains" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Domains: NewDomainsEndpoint(s),
	}
}

// Use applies the given middleware to all the "domains" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Domains = m(e.Domains)
}

// NewDomainsEndpoint returns an endpoint function that calls the method
// "domains" of service "domains".
func NewDomainsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DomainsPayload)
		return s.Domains(ctx, p)
	}
}
